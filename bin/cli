#!/usr/bin/env php
<?php

use Doctrine\DBAL\Tools\Console\Command\ImportCommand;
use Doctrine\DBAL\Tools\Console\Command\RunSqlCommand;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Tools\Console\Command\ClearCache\MetadataCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\QueryCommand;
use Doctrine\ORM\Tools\Console\Command\ClearCache\ResultCommand;
use Doctrine\ORM\Tools\Console\Command\ConvertDoctrine1SchemaCommand;
use Doctrine\ORM\Tools\Console\Command\ConvertMappingCommand;
use Doctrine\ORM\Tools\Console\Command\EnsureProductionSettingsCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateEntitiesCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateProxiesCommand;
use Doctrine\ORM\Tools\Console\Command\GenerateRepositoriesCommand;
use Doctrine\ORM\Tools\Console\Command\InfoCommand;
use Doctrine\ORM\Tools\Console\Command\MappingDescribeCommand;
use Doctrine\ORM\Tools\Console\Command\RunDqlCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\CreateCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\DropCommand;
use Doctrine\ORM\Tools\Console\Command\SchemaTool\UpdateCommand;
use Doctrine\ORM\Tools\Console\Command\ValidateSchemaCommand;
use Doctrine\ORM\Tools\Console\ConsoleRunner;
use Symfony\Component\Console\Application;
use Zend\ServiceManager\ServiceManager;

require __DIR__ . '/../vendor/autoload.php';

/** @var ServiceManager $serviceManager */
$serviceManager = require __DIR__ . '/../config/container.php';

/** @var EntityManager $entityManager */
$entityManager = $serviceManager->get(EntityManager::class);

$app = new Application();

$originalHelperSet = $app->getHelperSet();

$doctrineHelperSet = ConsoleRunner::createHelperSet($entityManager);

foreach ($doctrineHelperSet as $alias => $helper) {
    $originalHelperSet->set($helper, $alias);
}
$app->addCommands([
    new ConvertDoctrine1SchemaCommand(),
    new ConvertMappingCommand(),
    new CreateCommand(),
    new DropCommand(),
    new EnsureProductionSettingsCommand(),
    new GenerateEntitiesCommand(),
    new GenerateProxiesCommand(),
    new GenerateRepositoriesCommand(),
    new ImportCommand(),
    new InfoCommand(),
    new MappingDescribeCommand(),
    new MetadataCommand(),
    new QueryCommand(),
    new ResultCommand(),
    new RunDqlCommand(),
    new RunSqlCommand(),
    new UpdateCommand(),
    new ValidateSchemaCommand(),
]);

$exit = $app->run();

exit($exit);
